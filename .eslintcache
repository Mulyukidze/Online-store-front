[{"C:\\Users\\User1\\Desktop\\online-store-full-course-master\\client\\src\\index.js":"1","C:\\Users\\User1\\Desktop\\online-store-full-course-master\\client\\src\\App.js":"2","C:\\Users\\User1\\Desktop\\online-store-full-course-master\\client\\src\\store\\UserStore.js":"3","C:\\Users\\User1\\Desktop\\online-store-full-course-master\\client\\src\\store\\DeviceStore.js":"4","C:\\Users\\User1\\Desktop\\online-store-full-course-master\\client\\src\\http\\userAPI.js":"5","C:\\Users\\User1\\Desktop\\online-store-full-course-master\\client\\src\\components\\NavBar.js":"6","C:\\Users\\User1\\Desktop\\online-store-full-course-master\\client\\src\\components\\AppRouter.js":"7","C:\\Users\\User1\\Desktop\\online-store-full-course-master\\client\\src\\http\\index.js":"8","C:\\Users\\User1\\Desktop\\online-store-full-course-master\\client\\src\\routes.js":"9","C:\\Users\\User1\\Desktop\\online-store-full-course-master\\client\\src\\utils\\consts.js":"10","C:\\Users\\User1\\Desktop\\online-store-full-course-master\\client\\src\\pages\\DevicePage.js":"11","C:\\Users\\User1\\Desktop\\online-store-full-course-master\\client\\src\\pages\\Auth.js":"12","C:\\Users\\User1\\Desktop\\online-store-full-course-master\\client\\src\\pages\\Shop.js":"13","C:\\Users\\User1\\Desktop\\online-store-full-course-master\\client\\src\\pages\\Admin.js":"14","C:\\Users\\User1\\Desktop\\online-store-full-course-master\\client\\src\\pages\\Basket.js":"15","C:\\Users\\User1\\Desktop\\online-store-full-course-master\\client\\src\\http\\deviceAPI.js":"16","C:\\Users\\User1\\Desktop\\online-store-full-course-master\\client\\src\\components\\Pages.js":"17","C:\\Users\\User1\\Desktop\\online-store-full-course-master\\client\\src\\components\\BrandBar.js":"18","C:\\Users\\User1\\Desktop\\online-store-full-course-master\\client\\src\\components\\TypeBar.js":"19","C:\\Users\\User1\\Desktop\\online-store-full-course-master\\client\\src\\components\\DeviceList.js":"20","C:\\Users\\User1\\Desktop\\online-store-full-course-master\\client\\src\\components\\modals\\CreateDevice.js":"21","C:\\Users\\User1\\Desktop\\online-store-full-course-master\\client\\src\\components\\modals\\CreateType.js":"22","C:\\Users\\User1\\Desktop\\online-store-full-course-master\\client\\src\\components\\modals\\CreateBrand.js":"23","C:\\Users\\User1\\Desktop\\online-store-full-course-master\\client\\src\\components\\DeviceItem.js":"24","C:\\Users\\User1\\Desktop\\online-store-full-course-master\\client\\src\\components\\Slider.js":"25","C:\\Users\\User1\\Desktop\\online-store-full-course-master\\client\\src\\pages\\Catalog.js":"26","C:\\Users\\User1\\Desktop\\online-store-full-course-master\\client\\src\\pages\\Info.js":"27","C:\\Users\\User1\\Desktop\\online-store-full-course-master\\client\\src\\pages\\Contact.js":"28"},{"size":437,"mtime":1614445338775,"results":"29","hashOfConfig":"30"},{"size":872,"mtime":1619038761202,"results":"31","hashOfConfig":"30"},{"size":401,"mtime":1619286676035,"results":"32","hashOfConfig":"30"},{"size":1298,"mtime":1622915943434,"results":"33","hashOfConfig":"30"},{"size":769,"mtime":1622897028192,"results":"34","hashOfConfig":"30"},{"size":2996,"mtime":1622916165176,"results":"35","hashOfConfig":"30"},{"size":795,"mtime":1611985807000,"results":"36","hashOfConfig":"30"},{"size":406,"mtime":1612459791380,"results":"37","hashOfConfig":"30"},{"size":1103,"mtime":1614629240000,"results":"38","hashOfConfig":"30"},{"size":330,"mtime":1614629204691,"results":"39","hashOfConfig":"30"},{"size":2360,"mtime":1619721849806,"results":"40","hashOfConfig":"30"},{"size":5858,"mtime":1619296886325,"results":"41","hashOfConfig":"30"},{"size":3823,"mtime":1616518851458,"results":"42","hashOfConfig":"30"},{"size":1548,"mtime":1620836015465,"results":"43","hashOfConfig":"30"},{"size":176,"mtime":1619724251164,"results":"44","hashOfConfig":"30"},{"size":1352,"mtime":1622903396697,"results":"45","hashOfConfig":"30"},{"size":801,"mtime":1622915900970,"results":"46","hashOfConfig":"30"},{"size":759,"mtime":1611985807000,"results":"47","hashOfConfig":"30"},{"size":751,"mtime":1614447404438,"results":"48","hashOfConfig":"30"},{"size":490,"mtime":1622901153704,"results":"49","hashOfConfig":"30"},{"size":6114,"mtime":1612459871584,"results":"50","hashOfConfig":"30"},{"size":1354,"mtime":1620836324547,"results":"51","hashOfConfig":"30"},{"size":1368,"mtime":1620836323642,"results":"52","hashOfConfig":"30"},{"size":1094,"mtime":1619715679547,"results":"53","hashOfConfig":"30"},{"size":3052,"mtime":1614456717474,"results":"54","hashOfConfig":"30"},{"size":2369,"mtime":1622903161796,"results":"55","hashOfConfig":"30"},{"size":6306,"mtime":1615230868464,"results":"56","hashOfConfig":"30"},{"size":2330,"mtime":1619720335305,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"1da1pfz",{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"60"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"60"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"60"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"60"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"60"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"60"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"C:\\Users\\User1\\Desktop\\online-store-full-course-master\\client\\src\\index.js",[],["121","122"],"C:\\Users\\User1\\Desktop\\online-store-full-course-master\\client\\src\\App.js",["123"],"import React, {useContext, useEffect, useState} from 'react';\nimport {BrowserRouter} from \"react-router-dom\";\nimport AppRouter from \"./components/AppRouter\";\nimport NavBar from \"./components/NavBar\";\nimport {observer} from \"mobx-react-lite\";\nimport {Context} from \"./index\";\nimport {check} from \"./http/userAPI\";\nimport {Spinner} from \"react-bootstrap\";\n\nconst App = observer(() => {\n    const {user} = useContext(Context)\n    const [loading, setLoading] = useState(true)\n\n    useEffect(() => {\n        check().then(data => {\n            user.setUser(true)\n            user.setIsAuth(true)\n        }).finally(() => setLoading(false))\n    }, [])\n\n    if (loading) {\n        return <Spinner animation={\"grow\"}/>\n    }\n\n    return (\n        <BrowserRouter>\n            <NavBar />\n            <AppRouter />\n            \n        </BrowserRouter>\n    );\n});\n\nexport default App;","C:\\Users\\User1\\Desktop\\online-store-full-course-master\\client\\src\\store\\UserStore.js",[],"C:\\Users\\User1\\Desktop\\online-store-full-course-master\\client\\src\\store\\DeviceStore.js",[],"C:\\Users\\User1\\Desktop\\online-store-full-course-master\\client\\src\\http\\userAPI.js",[],"C:\\Users\\User1\\Desktop\\online-store-full-course-master\\client\\src\\components\\NavBar.js",["124"],"C:\\Users\\User1\\Desktop\\online-store-full-course-master\\client\\src\\components\\AppRouter.js",[],"C:\\Users\\User1\\Desktop\\online-store-full-course-master\\client\\src\\http\\index.js",[],"C:\\Users\\User1\\Desktop\\online-store-full-course-master\\client\\src\\routes.js",[],"C:\\Users\\User1\\Desktop\\online-store-full-course-master\\client\\src\\utils\\consts.js",[],"C:\\Users\\User1\\Desktop\\online-store-full-course-master\\client\\src\\pages\\DevicePage.js",["125"],"import React, {useEffect, useState} from 'react';\nimport {Button, Card, Col, Container, Image, Row} from \"react-bootstrap\";\nimport bigStar from '../assets/bigStar.png'\nimport {useParams, useHistory} from 'react-router-dom'\nimport {fetchOneDevice} from \"../http/deviceAPI\";\n\nconst DevicePage = () => {\n    const [device, setDevice] = useState({info: []})\n    const history = useHistory()\n    const {id} = useParams()\n    useEffect(() => {\n        fetchOneDevice(id).then(data => setDevice(data))\n    }, [])\n\n    return (\n        <Container className=\"mt-3\">\n            <Row>\n                <Col md={4}>\n                    <Image width={300} height={300} src={process.env.REACT_APP_API_URL + device.img}/>\n                </Col>\n                <Col md={4}>\n                    <Row className=\"d-flex flex-column align-items-center\">\n                        <h2>{device.name}</h2>\n                        <div\n                            className=\"d-flex align-items-center justify-content-center\"\n                            style={{background: `url(${bigStar}) no-repeat center center`, width:240, height: 240, backgroundSize: 'cover', fontSize:64}}\n                        >\n                            {device.rating}\n                        </div>\n                    </Row>\n                </Col>\n                <Col md={4}>\n                    <Card\n                        className=\"d-flex flex-column align-items-center justify-content-around\"\n                        style={{width: 300, height: 300, fontSize: 32, border: '5px solid lightgray'}}\n                    >\n                        <h3>От: {device.price} руб.</h3>\n                        <Button variant={\"success\"}>Добавить в корзину</Button>\n                    </Card>\n                </Col>\n            </Row>\n            <Row className=\"d-flex flex-column m-3\">\n                <h1>Характеристики</h1>\n                {device.info.map((info, index) =>\n                    <Row key={info.id} style={{background: index % 2 === 0 ? 'lightgray' : 'transparent', padding: 10}}>\n                        {info.title}: {info.description}\n                    </Row>\n                )}\n            </Row>\n            <Button className={\"mt-1\"} onClick={() => history.goBack()}>Назад</Button>\n        </Container>\n    );\n};\n\nexport default DevicePage;","C:\\Users\\User1\\Desktop\\online-store-full-course-master\\client\\src\\pages\\Auth.js",["126","127"],"import React, {useContext, useEffect, useState} from 'react';\nimport {Container, Form} from \"react-bootstrap\";\nimport Card from \"react-bootstrap/Card\";\nimport Button from \"react-bootstrap/Button\";\nimport Row from \"react-bootstrap/Row\";\nimport {NavLink, useLocation, useHistory} from \"react-router-dom\";\nimport {LOGIN_ROUTE, REGISTRATION_ROUTE, SHOP_ROUTE} from \"../utils/consts\";\nimport {login, registration} from \"../http/userAPI\";\nimport {observer} from \"mobx-react-lite\";\nimport {Context} from \"../index\";\n\nconst Auth = observer(() => {\n    const {user} = useContext(Context)\n    const location = useLocation()\n    const history = useHistory()\n    const isLogin = location.pathname === LOGIN_ROUTE\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n    const [emailDirty, setEmailDirty] = useState(false)\n    const [passwordDirty, setPasswordDirty] = useState(false)\n    const [emailError, setEmailError] = useState('Email не может быть пустым!')\n    const [passwordError, setPasswordError] = useState('Пароль не может быть пустым!')\n    const [formValid, setFormValid] = useState(false)\n\n    useEffect(() => {\n        if (emailError || passwordError) {\n            setFormValid(false)\n        } else {\n            setFormValid(true)\n        }\n    }, [emailError, passwordError])\n\n    const emailHandler = (e) => {\n        setEmail(e.target.value)\n        const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n        if(!re.test(String(e.target.value).toLowerCase())) {\n            setEmailError('Email некорректный!')\n        } else {\n            setEmailError('')\n        }\n    }\n\n    const passwordHandler = (e) => {\n        setPassword(e.target.value)\n        if (e.target.value.length < 3 || e.target.value.length > 8) {\n            setPasswordError('Пароль должен содержать от 3 до 8 символов!')\n            if (!e.target.value) {\n                setPasswordError('Пароль не может быть пустым!!')\n            }\n        } else {\n            setPasswordError('')\n        }\n    }\n\n    const blurHandler = (e) => {\n        switch (e.target.name) {\n            case 'email':\n                setEmailDirty(true)\n                break\n            case 'password':\n                setPasswordDirty(true)\n                break\n        }\n    }\n\n    const click = async () => {\n        try {\n            let data;\n            if (isLogin) {\n                data = await login(email, password);\n            } else {\n                data = await registration(email, password);\n                alert('Вы зарегистрированы!')\n            }\n            user.setUser(user)\n            user.setIsAuth(true)\n            history.push(SHOP_ROUTE)\n        } catch (e) {\n            alert('Данные не действительны! Попробуйте снова.')\n        }\n    }\n\n    return (\n        <Container\n            className=\"d-flex justify-content-center align-items-center\"\n            style={{height: window.innerHeight - 54}}\n        >\n            <Card style={{width: 600}} className=\"p-5\">\n                <h2 className=\"m-auto\">{isLogin ? 'Авторизация' : \"Регистрация\"}</h2>\n                {(emailDirty && emailError) && <div style={{color:'red'}}>{emailError}</div>}\n                <Form className=\"d-flex flex-column\">\n                    <Form.Control\n                        name='email'\n                        className=\"mt-3\"\n                        placeholder=\"Введите ваш email...\"\n                        value={email}\n                        onChange={e => emailHandler(e)}\n                        onBlur={e => blurHandler(e)}\n                    />\n                    {(passwordDirty && passwordError) && <div style={{color:'red'}}>{passwordError}</div>}\n                    <Form.Control\n                        name='password'\n                        className=\"mt-3\"\n                        placeholder=\"Введите ваш пароль...\"\n                        value={password}\n                        onChange={e => passwordHandler(e)}\n                        onBlur={e => blurHandler(e)}\n                        type=\"password\"\n                    />\n                    <Row className=\"d-flex justify-content-between mt-3 pl-3 pr-3\">\n                        {isLogin ?\n                            <div>\n                                Нет аккаунта? <NavLink to={REGISTRATION_ROUTE}>Зарегистрируйся!</NavLink>\n                            </div>\n                            :\n                            <div>\n                                Есть аккаунт? <NavLink to={LOGIN_ROUTE}>Войдите!</NavLink>\n                                {/* Checkbox podpiska */}\n                                <div className=\"mt-1\">\n                                    <input className=\"form-check-input\" type=\"checkbox\" value=\"\" id=\"flexCheckChecked\" defaultChecked></input>\n                                    <label className=\"form-check-label\" htmlFor=\"flexCheckChecked\">Согласие на получение рассылки</label>\n                                </div>\n                            </div>\n                        }\n                        <Button\n                            variant={\"outline-success\"}\n                            onClick={click}\n                            disabled={!formValid}\n                        >\n                            {isLogin ? 'Войти' : 'Регистрация' }\n                        </Button>\n                    </Row>\n                </Form>\n            </Card>\n        </Container>\n    );\n});\n\nexport default Auth;","C:\\Users\\User1\\Desktop\\online-store-full-course-master\\client\\src\\pages\\Shop.js",["128"],"import React, { Component } from 'react';\nimport Slider from '../components/Slider';\nimport Carousel from 'react-bootstrap/Carousel';\nimport { Container, CardDeck, Card, Button } from 'react-bootstrap';\nimport pervoeImg from '../assets/XR.jpg'\nimport vtoroeImg from '../assets/11.jpg'\nimport tretieImg from '../assets/12.jpg'\n\nfunction visitCatalog(){\n    window.location='http://localhost:3000/catalog';\n}\n\nexport default class Shop extends Component {\n    render() {\n        return (\n            <>\n                <Slider />\n                <Container>\n                    <h2 className=\"text-center m-4\" style={{textAlign: \"center\", margin: \"0px\", paddingBottom: \"30px\", fontSize: \"36px\", color: \"#747577\", lineHeight: \"30px\"}}>\n                        Бренд одежды, вдохновлённый этим безумным миром и девичьей силой. Сшито и напечатано вручную.\n                    </h2>\n                    <h2 className=\"text-center m-4\" style={{textAlign: \"center\", margin: \"0px\", paddingBottom: \"30px\", fontSize: \"16px\", color: \"#747577\", lineHeight: \"29px\"}}>\n                        Привет! Мы - Андрей и Таня, основатели и дизайнеры проекта Romanticana. Мы любим создавать красивые вещи, заряженные особенным настроением и \n                        индивидуальностью. Нам нравится удивлять, привнося в этот мир что-то необыкновенное.\n                    </h2>\n                    <CardDeck className=\"m-4\">\n                    <Card bg=\"success\" border=\"info\">\n                            <Card.Img \n                                variant=\"top\"\n                                src={ pervoeImg }\n                            />\n                            <Card.Body>\n                                <Card.Title>Apple iPhone XR - 64Gb Red (Красный)</Card.Title>\n                                <Card.Text>\n                                    Цена: 44690 ₽\n                                </Card.Text>\n                                <Button onClick={visitCatalog} variant=\"primary\">В магазин!</Button>\n                            </Card.Body>\n                        </Card>\n                        <Card bg=\"success\" border=\"info\">\n                            <Card.Img \n                                variant=\"top\"\n                                src={ vtoroeImg }\n                            />\n                            <Card.Body>\n                                <Card.Title>Apple iPhone 11 - 256Gb Black (Черный)</Card.Title>\n                                <Card.Text>\n                                    Цена: 68990 ₽\n                                </Card.Text>\n                                <Button onClick={visitCatalog} variant=\"primary\">В магазин!</Button>\n                            </Card.Body>\n                        </Card>\n                        <Card bg=\"success\" border=\"info\">\n                            <Card.Img \n                                variant=\"top\"\n                                src={ tretieImg }\n                            />\n                            <Card.Body>\n                                <Card.Title>Apple iPhone 12 - 128Gb White (Белый)</Card.Title>\n                                <Card.Text>\n                                    Цена: 73890 ₽\n                                </Card.Text>\n                                <Button onClick={visitCatalog} variant=\"primary\">В магазин!</Button>\n                            </Card.Body>\n                        </Card>\n                    </CardDeck>\n                </Container>\n            </>\n        );\n    }\n}","C:\\Users\\User1\\Desktop\\online-store-full-course-master\\client\\src\\pages\\Admin.js",[],"C:\\Users\\User1\\Desktop\\online-store-full-course-master\\client\\src\\pages\\Basket.js",[],"C:\\Users\\User1\\Desktop\\online-store-full-course-master\\client\\src\\http\\deviceAPI.js",["129"],"C:\\Users\\User1\\Desktop\\online-store-full-course-master\\client\\src\\components\\Pages.js",[],"C:\\Users\\User1\\Desktop\\online-store-full-course-master\\client\\src\\components\\BrandBar.js",[],"C:\\Users\\User1\\Desktop\\online-store-full-course-master\\client\\src\\components\\TypeBar.js",["130"],"import React, {useContext} from 'react';\nimport {observer} from \"mobx-react-lite\";\nimport {Context} from \"../index\";\nimport Col from \"react-bootstrap/Col\";\nimport ListGroup from \"react-bootstrap/ListGroup\";\n\nconst TypeBar = observer(() => {\n    const {device} = useContext(Context)\n    return (\n        <ListGroup>\n            {device.types.map(type =>\n                <ListGroup.Item\n                    style={{cursor: 'pointer'}}\n                    active={type.id === device.selectedType.id}\n                    onClick={() => device.setSelectedType(type)}\n                    key={type.id}\n                >\n                    {type.name}\n                </ListGroup.Item>\n            )}\n        </ListGroup>\n    );\n});\n\nexport default TypeBar;","C:\\Users\\User1\\Desktop\\online-store-full-course-master\\client\\src\\components\\DeviceList.js",[],"C:\\Users\\User1\\Desktop\\online-store-full-course-master\\client\\src\\components\\modals\\CreateDevice.js",["131","132"],"import React, {useContext, useEffect, useState} from 'react';\nimport Modal from \"react-bootstrap/Modal\";\nimport {Button, Dropdown, Form, Row, Col} from \"react-bootstrap\";\nimport {Context} from \"../../index\";\nimport {createDevice, fetchBrands, fetchDevices, fetchTypes} from \"../../http/deviceAPI\";\nimport {observer} from \"mobx-react-lite\";\n\nconst CreateDevice = observer(({show, onHide}) => {\n    const {device} = useContext(Context)\n    const [name, setName] = useState('')\n    const [price, setPrice] = useState(0)\n    const [file, setFile] = useState(null)\n    const [info, setInfo] = useState([])\n\n    useEffect(() => {\n        fetchTypes().then(data => device.setTypes(data))\n        fetchBrands().then(data => device.setBrands(data))\n    }, [])\n\n    const addInfo = () => {\n        setInfo([...info, {title: '', description: '', number: Date.now()}])\n    }\n    const removeInfo = (number) => {\n        setInfo(info.filter(i => i.number !== number))\n    }\n    const changeInfo = (key, value, number) => {\n        setInfo(info.map(i => i.number === number ? {...i, [key]: value} : i))\n    }\n\n    const selectFile = e => {\n        setFile(e.target.files[0])\n    }\n\n    const addDevice = () => {\n        const formData = new FormData()\n        formData.append('name', name)\n        formData.append('price', `${price}`)\n        formData.append('img', file)\n        formData.append('brandId', device.selectedBrand.id)\n        formData.append('typeId', device.selectedType.id)\n        formData.append('info', JSON.stringify(info))\n        createDevice(formData).then(data => onHide())\n    }\n\n    return (\n        <Modal\n            show={show}\n            onHide={onHide}\n            centered\n        >\n            <Modal.Header closeButton>\n                <Modal.Title id=\"contained-modal-title-vcenter\">\n                    Добавить устройство\n                </Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                <Form>\n                    <Dropdown className=\"mt-2 mb-2\">\n                        <Dropdown.Toggle>{device.selectedType.name || \"Выберите тип\"}</Dropdown.Toggle>\n                        <Dropdown.Menu>\n                            {device.types.map(type =>\n                                <Dropdown.Item\n                                    onClick={() => device.setSelectedType(type)}\n                                    key={type.id}\n                                >\n                                    {type.name}\n                                </Dropdown.Item>\n                            )}\n                        </Dropdown.Menu>\n                    </Dropdown>\n                    <Dropdown className=\"mt-2 mb-2\">\n                        <Dropdown.Toggle>{device.selectedBrand.name || \"Выберите бренд\"}</Dropdown.Toggle>\n                        <Dropdown.Menu>\n                            {device.brands.map(brand =>\n                                <Dropdown.Item\n                                    onClick={() => device.setSelectedBrand(brand)}\n                                    key={brand.id}\n                                >\n                                    {brand.name}\n                                </Dropdown.Item>\n                            )}\n                        </Dropdown.Menu>\n                    </Dropdown>\n                    <Form.Control\n                        value={name}\n                        onChange={e => setName(e.target.value)}\n                        className=\"mt-3\"\n                        placeholder=\"Введите название устройства\"\n                    />\n                    <Form.Control\n                        value={price}\n                        onChange={e => setPrice(Number(e.target.value))}\n                        className=\"mt-3\"\n                        placeholder=\"Введите стоимость устройства\"\n                        type=\"number\"\n                    />\n                    <Form.Control\n                        className=\"mt-3\"\n                        type=\"file\"\n                        onChange={selectFile}\n                    />\n                    <hr/>\n                    <Button\n                        variant={\"outline-dark\"}\n                        onClick={addInfo}\n                    >\n                        Добавить новое свойство\n                    </Button>\n                    {info.map(i =>\n                        <Row className=\"mt-4\" key={i.number}>\n                            <Col md={4}>\n                                <Form.Control\n                                    value={i.title}\n                                    onChange={(e) => changeInfo('title', e.target.value, i.number)}\n                                    placeholder=\"Введите название свойства\"\n                                />\n                            </Col>\n                            <Col md={4}>\n                                <Form.Control\n                                    value={i.description}\n                                    onChange={(e) => changeInfo('description', e.target.value, i.number)}\n                                    placeholder=\"Введите описание свойства\"\n                                />\n                            </Col>\n                            <Col md={4}>\n                                <Button\n                                    onClick={() => removeInfo(i.number)}\n                                    variant={\"outline-danger\"}\n                                >\n                                    Удалить\n                                </Button>\n                            </Col>\n                        </Row>\n                    )}\n                </Form>\n            </Modal.Body>\n            <Modal.Footer>\n                <Button variant=\"outline-danger\" onClick={onHide}>Закрыть</Button>\n                <Button variant=\"outline-success\" onClick={addDevice}>Добавить</Button>\n            </Modal.Footer>\n        </Modal>\n    );\n});\n\nexport default CreateDevice;","C:\\Users\\User1\\Desktop\\online-store-full-course-master\\client\\src\\components\\modals\\CreateType.js",[],"C:\\Users\\User1\\Desktop\\online-store-full-course-master\\client\\src\\components\\modals\\CreateBrand.js",[],"C:\\Users\\User1\\Desktop\\online-store-full-course-master\\client\\src\\components\\DeviceItem.js",[],"C:\\Users\\User1\\Desktop\\online-store-full-course-master\\client\\src\\components\\Slider.js",[],"C:\\Users\\User1\\Desktop\\online-store-full-course-master\\client\\src\\pages\\Catalog.js",["133","134"],"C:\\Users\\User1\\Desktop\\online-store-full-course-master\\client\\src\\pages\\Info.js",[],"C:\\Users\\User1\\Desktop\\online-store-full-course-master\\client\\src\\pages\\Contact.js",[],{"ruleId":"135","replacedBy":"136"},{"ruleId":"137","replacedBy":"138"},{"ruleId":"139","severity":1,"message":"140","line":19,"column":8,"nodeType":"141","endLine":19,"endColumn":10,"suggestions":"142"},{"ruleId":null,"fatal":true,"severity":2,"message":"143","line":28,"column":5},{"ruleId":"139","severity":1,"message":"144","line":13,"column":8,"nodeType":"141","endLine":13,"endColumn":10,"suggestions":"145"},{"ruleId":"146","severity":1,"message":"147","line":56,"column":9,"nodeType":"148","messageId":"149","endLine":63,"endColumn":10},{"ruleId":"150","severity":1,"message":"151","line":72,"column":17,"nodeType":"152","messageId":"153","endLine":72,"endColumn":21},{"ruleId":"150","severity":1,"message":"154","line":3,"column":8,"nodeType":"152","messageId":"153","endLine":3,"endColumn":16},{"ruleId":"150","severity":1,"message":"155","line":2,"column":8,"nodeType":"152","messageId":"153","endLine":2,"endColumn":18},{"ruleId":"150","severity":1,"message":"156","line":4,"column":8,"nodeType":"152","messageId":"153","endLine":4,"endColumn":11},{"ruleId":"150","severity":1,"message":"157","line":5,"column":36,"nodeType":"152","messageId":"153","endLine":5,"endColumn":48},{"ruleId":"139","severity":1,"message":"158","line":18,"column":8,"nodeType":"141","endLine":18,"endColumn":10,"suggestions":"159"},{"ruleId":"139","severity":1,"message":"158","line":24,"column":8,"nodeType":"141","endLine":24,"endColumn":10,"suggestions":"160"},{"ruleId":"139","severity":1,"message":"158","line":31,"column":8,"nodeType":"141","endLine":31,"endColumn":77,"suggestions":"161"},"no-native-reassign",["162"],"no-negated-in-lhs",["163"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'user'. Either include it or remove the dependency array.","ArrayExpression",["164"],"Parsing error: Unexpected token\n\n\u001b[0m \u001b[90m 26 | \u001b[39m    \u001b[36mconst\u001b[39m filteredDevice \u001b[33m=\u001b[39m \u001b[0m\n\u001b[0m \u001b[90m 27 | \u001b[39m\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 28 | \u001b[39m    \u001b[36mreturn\u001b[39m (\u001b[0m\n\u001b[0m \u001b[90m    | \u001b[39m    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 29 | \u001b[39m        \u001b[33m<\u001b[39m\u001b[33mNavbar\u001b[39m expand\u001b[33m=\u001b[39m\u001b[32m\"sm\"\u001b[39m bg\u001b[33m=\u001b[39m\u001b[32m\"dark\"\u001b[39m variant\u001b[33m=\u001b[39m\u001b[32m\"dark\"\u001b[39m\u001b[33m>\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 30 | \u001b[39m            \u001b[33m<\u001b[39m\u001b[33mContainer\u001b[39m\u001b[33m>\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 31 | \u001b[39m                \u001b[33m<\u001b[39m\u001b[33mNavbar\u001b[39m\u001b[33m.\u001b[39m\u001b[33mBrand\u001b[39m href\u001b[33m=\u001b[39m\u001b[32m\"/\"\u001b[39m \u001b[33m>\u001b[39m\u001b[0m","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["165"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-unused-vars","'data' is assigned a value but never used.","Identifier","unusedVar","'Carousel' is defined but never used.","'jwt_decode' is defined but never used.","'Col' is defined but never used.","'fetchDevices' is defined but never used.","React Hook useEffect has a missing dependency: 'device'. Either include it or remove the dependency array.",["166"],["167"],["168"],"no-global-assign","no-unsafe-negation",{"desc":"169","fix":"170"},{"desc":"171","fix":"172"},{"desc":"173","fix":"174"},{"desc":"173","fix":"175"},{"desc":"176","fix":"177"},"Update the dependencies array to be: [user]",{"range":"178","text":"179"},"Update the dependencies array to be: [id]",{"range":"180","text":"181"},"Update the dependencies array to be: [device]",{"range":"182","text":"183"},{"range":"184","text":"183"},"Update the dependencies array to be: [device.page, device.selectedType, device.selectedBrand, ordersprice, device]",{"range":"185","text":"186"},[641,643],"[user]",[502,504],"[id]",[747,749],"[device]",[1015,1017],[1267,1336],"[device.page, device.selectedType, device.selectedBrand, ordersprice, device]"]