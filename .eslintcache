[{"C:\\Users\\User1\\Desktop\\online-store-full-course-master\\client\\src\\index.js":"1","C:\\Users\\User1\\Desktop\\online-store-full-course-master\\client\\src\\App.js":"2","C:\\Users\\User1\\Desktop\\online-store-full-course-master\\client\\src\\store\\UserStore.js":"3","C:\\Users\\User1\\Desktop\\online-store-full-course-master\\client\\src\\store\\DeviceStore.js":"4","C:\\Users\\User1\\Desktop\\online-store-full-course-master\\client\\src\\http\\userAPI.js":"5","C:\\Users\\User1\\Desktop\\online-store-full-course-master\\client\\src\\components\\NavBar.js":"6","C:\\Users\\User1\\Desktop\\online-store-full-course-master\\client\\src\\components\\AppRouter.js":"7","C:\\Users\\User1\\Desktop\\online-store-full-course-master\\client\\src\\http\\index.js":"8","C:\\Users\\User1\\Desktop\\online-store-full-course-master\\client\\src\\routes.js":"9","C:\\Users\\User1\\Desktop\\online-store-full-course-master\\client\\src\\utils\\consts.js":"10","C:\\Users\\User1\\Desktop\\online-store-full-course-master\\client\\src\\pages\\DevicePage.js":"11","C:\\Users\\User1\\Desktop\\online-store-full-course-master\\client\\src\\pages\\Auth.js":"12","C:\\Users\\User1\\Desktop\\online-store-full-course-master\\client\\src\\pages\\Shop.js":"13","C:\\Users\\User1\\Desktop\\online-store-full-course-master\\client\\src\\pages\\Admin.js":"14","C:\\Users\\User1\\Desktop\\online-store-full-course-master\\client\\src\\pages\\Basket.js":"15","C:\\Users\\User1\\Desktop\\online-store-full-course-master\\client\\src\\http\\deviceAPI.js":"16","C:\\Users\\User1\\Desktop\\online-store-full-course-master\\client\\src\\components\\Pages.js":"17","C:\\Users\\User1\\Desktop\\online-store-full-course-master\\client\\src\\components\\BrandBar.js":"18","C:\\Users\\User1\\Desktop\\online-store-full-course-master\\client\\src\\components\\TypeBar.js":"19","C:\\Users\\User1\\Desktop\\online-store-full-course-master\\client\\src\\components\\DeviceList.js":"20","C:\\Users\\User1\\Desktop\\online-store-full-course-master\\client\\src\\components\\modals\\CreateDevice.js":"21","C:\\Users\\User1\\Desktop\\online-store-full-course-master\\client\\src\\components\\modals\\CreateType.js":"22","C:\\Users\\User1\\Desktop\\online-store-full-course-master\\client\\src\\components\\modals\\CreateBrand.js":"23","C:\\Users\\User1\\Desktop\\online-store-full-course-master\\client\\src\\components\\DeviceItem.js":"24","C:\\Users\\User1\\Desktop\\online-store-full-course-master\\client\\src\\components\\Slider.js":"25","C:\\Users\\User1\\Desktop\\online-store-full-course-master\\client\\src\\pages\\Catalog.js":"26","C:\\Users\\User1\\Desktop\\online-store-full-course-master\\client\\src\\pages\\Info.js":"27","C:\\Users\\User1\\Desktop\\online-store-full-course-master\\client\\src\\pages\\Contact.js":"28"},{"size":437,"mtime":1614445338775,"results":"29","hashOfConfig":"30"},{"size":872,"mtime":1615229728783,"results":"31","hashOfConfig":"30"},{"size":401,"mtime":1611985807000,"results":"32","hashOfConfig":"30"},{"size":1298,"mtime":1611985807000,"results":"33","hashOfConfig":"30"},{"size":695,"mtime":1611985807000,"results":"34","hashOfConfig":"30"},{"size":2615,"mtime":1615228886933,"results":"35","hashOfConfig":"30"},{"size":795,"mtime":1611985807000,"results":"36","hashOfConfig":"30"},{"size":406,"mtime":1612459791380,"results":"37","hashOfConfig":"30"},{"size":1103,"mtime":1614629240000,"results":"38","hashOfConfig":"30"},{"size":330,"mtime":1614629204691,"results":"39","hashOfConfig":"30"},{"size":2228,"mtime":1614628104531,"results":"40","hashOfConfig":"30"},{"size":3702,"mtime":1615662381810,"results":"41","hashOfConfig":"30"},{"size":3823,"mtime":1616518851458,"results":"42","hashOfConfig":"30"},{"size":1548,"mtime":1612456273767,"results":"43","hashOfConfig":"30"},{"size":176,"mtime":1615229049283,"results":"44","hashOfConfig":"30"},{"size":1018,"mtime":1615491183307,"results":"45","hashOfConfig":"30"},{"size":801,"mtime":1611985807000,"results":"46","hashOfConfig":"30"},{"size":759,"mtime":1611985807000,"results":"47","hashOfConfig":"30"},{"size":751,"mtime":1614447404438,"results":"48","hashOfConfig":"30"},{"size":490,"mtime":1616515002959,"results":"49","hashOfConfig":"30"},{"size":6114,"mtime":1612459871584,"results":"50","hashOfConfig":"30"},{"size":1367,"mtime":1612380868907,"results":"51","hashOfConfig":"30"},{"size":1380,"mtime":1612456121842,"results":"52","hashOfConfig":"30"},{"size":1089,"mtime":1612981104294,"results":"53","hashOfConfig":"30"},{"size":3052,"mtime":1614456717474,"results":"54","hashOfConfig":"30"},{"size":1592,"mtime":1614628152539,"results":"55","hashOfConfig":"30"},{"size":6306,"mtime":1615230868464,"results":"56","hashOfConfig":"30"},{"size":2363,"mtime":1615755070812,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"1da1pfz",{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"60"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"60"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"60"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"60"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"60"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"60"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"60"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"60"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"60"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"60"},"C:\\Users\\User1\\Desktop\\online-store-full-course-master\\client\\src\\index.js",[],["125","126"],"C:\\Users\\User1\\Desktop\\online-store-full-course-master\\client\\src\\App.js",["127"],"import React, {useContext, useEffect, useState} from 'react';\nimport {BrowserRouter} from \"react-router-dom\";\nimport AppRouter from \"./components/AppRouter\";\nimport NavBar from \"./components/NavBar\";\nimport {observer} from \"mobx-react-lite\";\nimport {Context} from \"./index\";\nimport {check} from \"./http/userAPI\";\nimport {Spinner} from \"react-bootstrap\";\n\nconst App = observer(() => {\n    const {user} = useContext(Context)\n    const [loading, setLoading] = useState(true)\n\n    useEffect(() => {\n        check().then(data => {\n            user.setUser(true)\n            user.setIsAuth(true)\n        }).finally(() => setLoading(false))\n    }, [])\n\n    if (loading) {\n        return <Spinner animation={\"grow\"}/>\n    }\n\n    return (\n        <BrowserRouter>\n            <NavBar />\n            <AppRouter />\n            \n        </BrowserRouter>\n    );\n});\n\nexport default App;","C:\\Users\\User1\\Desktop\\online-store-full-course-master\\client\\src\\store\\UserStore.js",[],"C:\\Users\\User1\\Desktop\\online-store-full-course-master\\client\\src\\store\\DeviceStore.js",[],"C:\\Users\\User1\\Desktop\\online-store-full-course-master\\client\\src\\http\\userAPI.js",[],"C:\\Users\\User1\\Desktop\\online-store-full-course-master\\client\\src\\components\\NavBar.js",[],"C:\\Users\\User1\\Desktop\\online-store-full-course-master\\client\\src\\components\\AppRouter.js",[],"C:\\Users\\User1\\Desktop\\online-store-full-course-master\\client\\src\\http\\index.js",[],"C:\\Users\\User1\\Desktop\\online-store-full-course-master\\client\\src\\routes.js",[],"C:\\Users\\User1\\Desktop\\online-store-full-course-master\\client\\src\\utils\\consts.js",[],"C:\\Users\\User1\\Desktop\\online-store-full-course-master\\client\\src\\pages\\DevicePage.js",["128"],"import React, {useEffect, useState} from 'react';\nimport {Button, Card, Col, Container, Image, Row} from \"react-bootstrap\";\nimport bigStar from '../assets/bigStar.png'\nimport {useParams} from 'react-router-dom'\nimport {fetchOneDevice} from \"../http/deviceAPI\";\n\nconst DevicePage = () => {\n    const [device, setDevice] = useState({info: []})\n    const {id} = useParams()\n    useEffect(() => {\n        fetchOneDevice(id).then(data => setDevice(data))\n    }, [])\n\n    return (\n        <Container className=\"mt-3\">\n            <Row>\n                <Col md={4}>\n                    <Image width={300} height={300} src={process.env.REACT_APP_API_URL + device.img}/>\n                </Col>\n                <Col md={4}>\n                    <Row className=\"d-flex flex-column align-items-center\">\n                        <h2>{device.name}</h2>\n                        <div\n                            className=\"d-flex align-items-center justify-content-center\"\n                            style={{background: `url(${bigStar}) no-repeat center center`, width:240, height: 240, backgroundSize: 'cover', fontSize:64}}\n                        >\n                            {device.rating}\n                        </div>\n                    </Row>\n                </Col>\n                <Col md={4}>\n                    <Card\n                        className=\"d-flex flex-column align-items-center justify-content-around\"\n                        style={{width: 300, height: 300, fontSize: 32, border: '5px solid lightgray'}}\n                    >\n                        <h3>От: {device.price} руб.</h3>\n                        <Button variant={\"outline-dark\"}>Добавить в корзину</Button>\n                    </Card>\n                </Col>\n            </Row>\n            <Row className=\"d-flex flex-column m-3\">\n                <h1>Характеристики</h1>\n                {device.info.map((info, index) =>\n                    <Row key={info.id} style={{background: index % 2 === 0 ? 'lightgray' : 'transparent', padding: 10}}>\n                        {info.title}: {info.description}\n                    </Row>\n                )}\n            </Row>\n        </Container>\n    );\n};\n\nexport default DevicePage;","C:\\Users\\User1\\Desktop\\online-store-full-course-master\\client\\src\\pages\\Auth.js",["129"],"import React, {useContext, useState} from 'react';\nimport {Container, Form} from \"react-bootstrap\";\nimport Card from \"react-bootstrap/Card\";\nimport Button from \"react-bootstrap/Button\";\nimport Row from \"react-bootstrap/Row\";\nimport {NavLink, useLocation, useHistory} from \"react-router-dom\";\nimport {LOGIN_ROUTE, REGISTRATION_ROUTE, SHOP_ROUTE} from \"../utils/consts\";\nimport {login, registration} from \"../http/userAPI\";\nimport {observer} from \"mobx-react-lite\";\nimport {Context} from \"../index\";\n\nconst Auth = observer(() => {\n    const {user} = useContext(Context)\n    const location = useLocation()\n    const history = useHistory()\n    const isLogin = location.pathname === LOGIN_ROUTE\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n\n    const click = async () => {\n        try {\n            let data;\n            if (isLogin) {\n                data = await login(email, password);\n            } else {\n                data = await registration(email, password);\n                alert('Вы зарегистрированы!')\n            }\n            user.setUser(user)\n            user.setIsAuth(true)\n            history.push(SHOP_ROUTE)\n        } catch (e) {\n            alert('Данные не действительны! Попробуйте снова.')\n        }\n    }\n\n    return (\n        <Container\n            className=\"d-flex justify-content-center align-items-center\"\n            style={{height: window.innerHeight - 54}}\n        >\n            <Card style={{width: 600}} className=\"p-5\">\n                <h2 className=\"m-auto\">{isLogin ? 'Авторизация' : \"Регистрация\"}</h2>\n                <Form className=\"d-flex flex-column\">\n                    <Form.Control\n                        className=\"mt-3\"\n                        placeholder=\"Введите ваш email...\"\n                        value={email}\n                        onChange={e => setEmail(e.target.value)}\n                    />\n                    <Form.Control\n                        className=\"mt-3\"\n                        placeholder=\"Введите ваш пароль...\"\n                        value={password}\n                        onChange={e => setPassword(e.target.value)}\n                        type=\"password\"\n                    />\n                    <Row className=\"d-flex justify-content-between mt-3 pl-3 pr-3\">\n                        {isLogin ?\n                            <div>\n                                Нет аккаунта? <NavLink to={REGISTRATION_ROUTE}>Зарегистрируйся!</NavLink>\n                            </div>\n                            :\n                            <div>\n                                Есть аккаунт? <NavLink to={LOGIN_ROUTE}>Войдите!</NavLink>\n                                {/* Checkbox podpiska */}\n                                <div className=\"mt-1\">\n                                    <input class=\"form-check-input\" type=\"checkbox\" value=\"\" id=\"flexCheckChecked\" checked></input>\n                                    <label class=\"form-check-label\" for=\"flexCheckChecked\">Согласие на получение рассылки</label>\n                                </div>\n                            </div>\n                        }\n                        <Button\n                            variant={\"outline-success\"}\n                            onClick={click}\n                        >\n                            {isLogin ? 'Войти' : 'Регистрация' }\n                        </Button>\n                    </Row>\n                </Form>\n            </Card>\n        </Container>\n    );\n});\n\nexport default Auth;","C:\\Users\\User1\\Desktop\\online-store-full-course-master\\client\\src\\pages\\Shop.js",["130"],"C:\\Users\\User1\\Desktop\\online-store-full-course-master\\client\\src\\pages\\Admin.js",[],"C:\\Users\\User1\\Desktop\\online-store-full-course-master\\client\\src\\pages\\Basket.js",[],"C:\\Users\\User1\\Desktop\\online-store-full-course-master\\client\\src\\http\\deviceAPI.js",["131"],"import {$authHost, $host} from \"./index\";\nimport jwt_decode from \"jwt-decode\";\n\nexport const createType = async (type) => {\n    const {data} = await $authHost.post('api/type', type)\n    return data\n}\n\nexport const fetchTypes = async () => {\n    const {data} = await $host.get('api/type')\n    return data\n}\n\nexport const createBrand = async (brand) => {\n    const {data} = await $authHost.post('api/brand', brand)\n    return data\n}\n\nexport const fetchBrands = async () => {\n    const {data} = await $host.get('api/brand', )\n    return data\n}\n\nexport const createDevice = async (device) => {\n    const {data} = await $authHost.post('api/device', device)\n    return data\n}\n\nexport const fetchDevices = async (typeId, brandId, page, limit= 5) => {\n    const {data} = await $host.get('api/device', {params: {\n            typeId, brandId, page, limit\n        }})\n    return data\n}\n\nexport const fetchOneDevice = async (id) => {\n    const {data} = await $host.get('api/device/' + id)\n    console.log(data);\n    return data\n}\n","C:\\Users\\User1\\Desktop\\online-store-full-course-master\\client\\src\\components\\Pages.js",[],"C:\\Users\\User1\\Desktop\\online-store-full-course-master\\client\\src\\components\\BrandBar.js",[],"C:\\Users\\User1\\Desktop\\online-store-full-course-master\\client\\src\\components\\TypeBar.js",["132"],"import React, {useContext} from 'react';\nimport {observer} from \"mobx-react-lite\";\nimport {Context} from \"../index\";\nimport Col from \"react-bootstrap/Col\";\nimport ListGroup from \"react-bootstrap/ListGroup\";\n\nconst TypeBar = observer(() => {\n    const {device} = useContext(Context)\n    return (\n        <ListGroup>\n            {device.types.map(type =>\n                <ListGroup.Item\n                    style={{cursor: 'pointer'}}\n                    active={type.id === device.selectedType.id}\n                    onClick={() => device.setSelectedType(type)}\n                    key={type.id}\n                >\n                    {type.name}\n                </ListGroup.Item>\n            )}\n        </ListGroup>\n    );\n});\n\nexport default TypeBar;","C:\\Users\\User1\\Desktop\\online-store-full-course-master\\client\\src\\components\\DeviceList.js",[],"C:\\Users\\User1\\Desktop\\online-store-full-course-master\\client\\src\\components\\modals\\CreateDevice.js",["133","134"],"import React, {useContext, useEffect, useState} from 'react';\nimport Modal from \"react-bootstrap/Modal\";\nimport {Button, Dropdown, Form, Row, Col} from \"react-bootstrap\";\nimport {Context} from \"../../index\";\nimport {createDevice, fetchBrands, fetchDevices, fetchTypes} from \"../../http/deviceAPI\";\nimport {observer} from \"mobx-react-lite\";\n\nconst CreateDevice = observer(({show, onHide}) => {\n    const {device} = useContext(Context)\n    const [name, setName] = useState('')\n    const [price, setPrice] = useState(0)\n    const [file, setFile] = useState(null)\n    const [info, setInfo] = useState([])\n\n    useEffect(() => {\n        fetchTypes().then(data => device.setTypes(data))\n        fetchBrands().then(data => device.setBrands(data))\n    }, [])\n\n    const addInfo = () => {\n        setInfo([...info, {title: '', description: '', number: Date.now()}])\n    }\n    const removeInfo = (number) => {\n        setInfo(info.filter(i => i.number !== number))\n    }\n    const changeInfo = (key, value, number) => {\n        setInfo(info.map(i => i.number === number ? {...i, [key]: value} : i))\n    }\n\n    const selectFile = e => {\n        setFile(e.target.files[0])\n    }\n\n    const addDevice = () => {\n        const formData = new FormData()\n        formData.append('name', name)\n        formData.append('price', `${price}`)\n        formData.append('img', file)\n        formData.append('brandId', device.selectedBrand.id)\n        formData.append('typeId', device.selectedType.id)\n        formData.append('info', JSON.stringify(info))\n        createDevice(formData).then(data => onHide())\n    }\n\n    return (\n        <Modal\n            show={show}\n            onHide={onHide}\n            centered\n        >\n            <Modal.Header closeButton>\n                <Modal.Title id=\"contained-modal-title-vcenter\">\n                    Добавить устройство\n                </Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                <Form>\n                    <Dropdown className=\"mt-2 mb-2\">\n                        <Dropdown.Toggle>{device.selectedType.name || \"Выберите тип\"}</Dropdown.Toggle>\n                        <Dropdown.Menu>\n                            {device.types.map(type =>\n                                <Dropdown.Item\n                                    onClick={() => device.setSelectedType(type)}\n                                    key={type.id}\n                                >\n                                    {type.name}\n                                </Dropdown.Item>\n                            )}\n                        </Dropdown.Menu>\n                    </Dropdown>\n                    <Dropdown className=\"mt-2 mb-2\">\n                        <Dropdown.Toggle>{device.selectedBrand.name || \"Выберите бренд\"}</Dropdown.Toggle>\n                        <Dropdown.Menu>\n                            {device.brands.map(brand =>\n                                <Dropdown.Item\n                                    onClick={() => device.setSelectedBrand(brand)}\n                                    key={brand.id}\n                                >\n                                    {brand.name}\n                                </Dropdown.Item>\n                            )}\n                        </Dropdown.Menu>\n                    </Dropdown>\n                    <Form.Control\n                        value={name}\n                        onChange={e => setName(e.target.value)}\n                        className=\"mt-3\"\n                        placeholder=\"Введите название устройства\"\n                    />\n                    <Form.Control\n                        value={price}\n                        onChange={e => setPrice(Number(e.target.value))}\n                        className=\"mt-3\"\n                        placeholder=\"Введите стоимость устройства\"\n                        type=\"number\"\n                    />\n                    <Form.Control\n                        className=\"mt-3\"\n                        type=\"file\"\n                        onChange={selectFile}\n                    />\n                    <hr/>\n                    <Button\n                        variant={\"outline-dark\"}\n                        onClick={addInfo}\n                    >\n                        Добавить новое свойство\n                    </Button>\n                    {info.map(i =>\n                        <Row className=\"mt-4\" key={i.number}>\n                            <Col md={4}>\n                                <Form.Control\n                                    value={i.title}\n                                    onChange={(e) => changeInfo('title', e.target.value, i.number)}\n                                    placeholder=\"Введите название свойства\"\n                                />\n                            </Col>\n                            <Col md={4}>\n                                <Form.Control\n                                    value={i.description}\n                                    onChange={(e) => changeInfo('description', e.target.value, i.number)}\n                                    placeholder=\"Введите описание свойства\"\n                                />\n                            </Col>\n                            <Col md={4}>\n                                <Button\n                                    onClick={() => removeInfo(i.number)}\n                                    variant={\"outline-danger\"}\n                                >\n                                    Удалить\n                                </Button>\n                            </Col>\n                        </Row>\n                    )}\n                </Form>\n            </Modal.Body>\n            <Modal.Footer>\n                <Button variant=\"outline-danger\" onClick={onHide}>Закрыть</Button>\n                <Button variant=\"outline-success\" onClick={addDevice}>Добавить</Button>\n            </Modal.Footer>\n        </Modal>\n    );\n});\n\nexport default CreateDevice;","C:\\Users\\User1\\Desktop\\online-store-full-course-master\\client\\src\\components\\modals\\CreateType.js",["135"],"import React, {useState} from 'react';\nimport Modal from \"react-bootstrap/Modal\";\nimport {Button, Form} from \"react-bootstrap\";\nimport {createType, createBrand} from \"../../http/deviceAPI\";\n\nconst CreateType = ({show, onHide}) => {\n    const [value, setValue] = useState('')\n\n    const addType = () => {\n        createType({name: value}).then(data => {\n            setValue('')\n            onHide()\n        })\n    }\n    return (\n        <Modal\n            show={show}\n            onHide={onHide}\n            centered\n        >\n            <Modal.Header closeButton>\n                <Modal.Title id=\"contained-modal-title-vcenter\">\n                    Добавить тип\n                </Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                <Form>\n                    <Form.Control\n                        value={value}\n                        onChange={e => setValue(e.target.value)}\n                        placeholder={\"Введите название типа\"}\n                    />\n                </Form>\n            </Modal.Body>\n            <Modal.Footer>\n                <Button variant=\"outline-danger\" onClick={onHide}>Закрыть</Button>\n                <Button variant=\"outline-success\" onClick={addType}>Добавить</Button>\n            </Modal.Footer>\n        </Modal>\n    );\n};\n\nexport default CreateType;\n","C:\\Users\\User1\\Desktop\\online-store-full-course-master\\client\\src\\components\\modals\\CreateBrand.js",["136"],"import React, {useState} from 'react';\nimport Modal from \"react-bootstrap/Modal\";\nimport {Button, Form} from \"react-bootstrap\";\nimport {createBrand, createType} from \"../../http/deviceAPI\";\n\nconst CreateBrand = ({show, onHide}) => {\n    const [value, setValue] = useState('')\n\n    const addBrand = () => {\n        createBrand({name: value}).then(data => {\n            setValue('')\n            onHide()\n        })\n    }\n    return (\n        <Modal\n            show={show}\n            onHide={onHide}\n            centered\n        >\n            <Modal.Header closeButton>\n                <Modal.Title id=\"contained-modal-title-vcenter\">\n                    Добавить бренд\n                </Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                <Form>\n                    <Form.Control\n                        value={value}\n                        onChange={e => setValue(e.target.value)}\n                        placeholder={\"Введите название бренда\"}\n                    />\n                </Form>\n            </Modal.Body>\n            <Modal.Footer>\n                <Button variant=\"outline-danger\" onClick={onHide}>Закрыть</Button>\n                <Button variant=\"outline-success\" onClick={addBrand}>Добавить</Button>\n            </Modal.Footer>\n        </Modal>\n    );\n};\n\nexport default CreateBrand;\n","C:\\Users\\User1\\Desktop\\online-store-full-course-master\\client\\src\\components\\DeviceItem.js",[],"C:\\Users\\User1\\Desktop\\online-store-full-course-master\\client\\src\\components\\Slider.js",[],"C:\\Users\\User1\\Desktop\\online-store-full-course-master\\client\\src\\pages\\Catalog.js",["137","138"],"import React, {useContext, useEffect} from 'react';\r\nimport {Container} from \"react-bootstrap\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport TypeBar from \"../components/TypeBar\";\r\nimport BrandBar from \"../components/BrandBar\";\r\nimport DeviceList from \"../components/DeviceList\";\r\nimport {observer} from \"mobx-react-lite\";\r\nimport {Context} from \"../index\";\r\nimport {fetchBrands, fetchDevices, fetchTypes} from \"../http/deviceAPI\";\r\nimport Pages from \"../components/Pages\";\r\n\r\nconst Catalog = observer(() => {\r\n    const {device} = useContext(Context)\r\n\r\n    useEffect(() => {\r\n        fetchTypes().then(data => device.setTypes(data))\r\n        fetchBrands().then(data => device.setBrands(data))\r\n        fetchDevices(null, null, 1, 2).then(data => {\r\n            device.setDevices(data.rows)\r\n            device.setTotalCount(data.count)\r\n        })\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        fetchDevices(device.selectedType.id, device.selectedBrand.id, device.page, 2).then(data => {\r\n            device.setDevices(data.rows)\r\n            device.setTotalCount(data.count)\r\n        })\r\n    }, [device.page, device.selectedType, device.selectedBrand,])\r\n\r\n    return (\r\n        <Container>\r\n            <Row className=\"mt-2\">\r\n                <Col md={3}>\r\n                    <TypeBar/>\r\n                </Col>\r\n                <Col md={9}>\r\n                    <BrandBar/>\r\n                    <DeviceList/>\r\n                    <Pages/>\r\n                </Col>\r\n            </Row>\r\n\r\n        </Container>\r\n    );\r\n});\r\n\r\nexport default Catalog;","C:\\Users\\User1\\Desktop\\online-store-full-course-master\\client\\src\\pages\\Info.js",[],"C:\\Users\\User1\\Desktop\\online-store-full-course-master\\client\\src\\pages\\Contact.js",["139","140","141"],"import React, { Component } from 'react';\r\nimport { Form, Button, Container } from 'react-bootstrap'\r\nimport axios from \"axios\";\r\nimport {SHOP_ROUTE} from \"../utils/consts\";\r\n\r\nexport default class Contact extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            email: '',\r\n            text: ''\r\n        };\r\n      }\r\n    emailtostate(e){\r\n        this.state.email = e.target.value\r\n    }\r\n    texttostate(e){\r\n        this.state.text = e.target.value\r\n    }\r\n    clickbutton(e){\r\n        let text = this.state.text\r\n        let email = this.state.email\r\n        axios.post('http://localhost:5000/api/contacts', {\r\n        email: email,\r\n        text: text\r\n        }).then(r => console.log(r)).catch(err => err)\r\n        e.preventDefault()\r\n        alert('Письмо отправлено!')\r\n        document.location.href=\"http://localhost:3000/\"\r\n    }\r\n    render() {\r\n        return (\r\n            <Container style={{ width: '500px'}}>\r\n                <h1 className=\"text-center\">Обратная связь</h1>\r\n                <Form>\r\n                    <Form.Group controlId=\"formBasicEmail\">\r\n                        <Form.Label>Введите Email</Form.Label>\r\n                        <Form.Control type=\"email\" placeholder=\"Email\" onInput={(e) => this.emailtostate(e)}/>\r\n                        <Form.Text>\r\n                        Мы никогда никому не передадим вашу электронную почту!\r\n                        </Form.Text>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"formBasicPassword\">\r\n                        <Form.Label>Введите текст</Form.Label>\r\n                        <Form.Control as=\"textarea\" rows=\"3\" placeholder=\"Текст\" onInput={e => this.texttostate(e)}/>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"formBasicCheckbox\">\r\n                        <Form.Check type=\"checkbox\" label=\"Согласие на обработку данных\"/>\r\n                    </Form.Group>\r\n                    <Button  onClick={event => this.clickbutton(event)}\r\n                    variant=\"primary\" \r\n                    type=\"submit\" >Отправить\r\n                    </Button>\r\n                </Form>\r\n            </Container>\r\n        )\r\n    }\r\n}",{"ruleId":"142","replacedBy":"143"},{"ruleId":"144","replacedBy":"145"},{"ruleId":"146","severity":1,"message":"147","line":19,"column":8,"nodeType":"148","endLine":19,"endColumn":10,"suggestions":"149"},{"ruleId":"146","severity":1,"message":"150","line":12,"column":8,"nodeType":"148","endLine":12,"endColumn":10,"suggestions":"151"},{"ruleId":"152","severity":1,"message":"153","line":26,"column":17,"nodeType":"154","messageId":"155","endLine":26,"endColumn":21},{"ruleId":"152","severity":1,"message":"156","line":3,"column":8,"nodeType":"154","messageId":"155","endLine":3,"endColumn":16},{"ruleId":"152","severity":1,"message":"157","line":2,"column":8,"nodeType":"154","messageId":"155","endLine":2,"endColumn":18},{"ruleId":"152","severity":1,"message":"158","line":4,"column":8,"nodeType":"154","messageId":"155","endLine":4,"endColumn":11},{"ruleId":"152","severity":1,"message":"159","line":5,"column":36,"nodeType":"154","messageId":"155","endLine":5,"endColumn":48},{"ruleId":"146","severity":1,"message":"160","line":18,"column":8,"nodeType":"148","endLine":18,"endColumn":10,"suggestions":"161"},{"ruleId":"152","severity":1,"message":"162","line":4,"column":21,"nodeType":"154","messageId":"155","endLine":4,"endColumn":32},{"ruleId":"152","severity":1,"message":"163","line":4,"column":22,"nodeType":"154","messageId":"155","endLine":4,"endColumn":32},{"ruleId":"146","severity":1,"message":"160","line":23,"column":8,"nodeType":"148","endLine":23,"endColumn":10,"suggestions":"164"},{"ruleId":"146","severity":1,"message":"160","line":30,"column":8,"nodeType":"148","endLine":30,"endColumn":65,"suggestions":"165"},{"ruleId":"152","severity":1,"message":"166","line":4,"column":9,"nodeType":"154","messageId":"155","endLine":4,"endColumn":19},{"ruleId":"167","severity":1,"message":"168","line":15,"column":9,"nodeType":"169","endLine":15,"endColumn":19},{"ruleId":"167","severity":1,"message":"168","line":18,"column":9,"nodeType":"169","endLine":18,"endColumn":19},"no-native-reassign",["170"],"no-negated-in-lhs",["171"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'user'. Either include it or remove the dependency array.","ArrayExpression",["172"],"React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["173"],"no-unused-vars","'data' is assigned a value but never used.","Identifier","unusedVar","'Carousel' is defined but never used.","'jwt_decode' is defined but never used.","'Col' is defined but never used.","'fetchDevices' is defined but never used.","React Hook useEffect has a missing dependency: 'device'. Either include it or remove the dependency array.",["174"],"'createBrand' is defined but never used.","'createType' is defined but never used.",["175"],["176"],"'SHOP_ROUTE' is defined but never used.","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","no-global-assign","no-unsafe-negation",{"desc":"177","fix":"178"},{"desc":"179","fix":"180"},{"desc":"181","fix":"182"},{"desc":"181","fix":"183"},{"desc":"184","fix":"185"},"Update the dependencies array to be: [user]",{"range":"186","text":"187"},"Update the dependencies array to be: [id]",{"range":"188","text":"189"},"Update the dependencies array to be: [device]",{"range":"190","text":"191"},{"range":"192","text":"191"},"Update the dependencies array to be: [device.page, device.selectedType, device.selectedBrand, device]",{"range":"193","text":"194"},[641,643],"[user]",[457,459],"[id]",[747,749],"[device]",[900,902],[1139,1196],"[device.page, device.selectedType, device.selectedBrand, device]"]